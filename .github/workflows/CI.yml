name: CI
on:
  pull_request: 
    branches: [ main, gui ]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ Linux, Windows, macOS ]
    steps:
      - name: Cleanup (Others)
        if: matrix.os != 'Windows'
        run: |
          rm -rf src/extern/glfw
          rm -rf src/extern/imgui
          rm -rf src/extern/rebsdev
      - name: Cleanup (Windows)
        if: matrix.os == 'Windows'
        run: |
          if (Test-Path src\extern\glfw) {Remove-Item -Recurse -Force -Confirm:$false src\extern\glfw}
          if (Test-Path src\extern\imgui) {Remove-Item -Recurse -Force -Confirm:$false src\extern\imgui}
      - name: Checkout this repo
        uses: actions/checkout@v2
        with:
          token: ${{secrets.GLFW_CHECKOUT}}
          submodules: recursive
      - name: Checkout submodules
        run: |
          cd src/extern/GSL
          git fetch origin
          git checkout origin/master
          cd ../glfw
          git fetch origin
          git checkout origin/master
          cd ../imgui
          git fetch origin
          git checkout origin/master
          cd ../rebsdev
          git fetch origin
          git checkout origin/master
          cd ../../..
          echo OS: ${{matrix.os}}

      - name: Build product (64bit)
        run: |
          cd src
          bazel build --strip=always :caldev

      - name: Build Windows 32bit
        if: matrix.os == 'Windows'
        run: |
          cd src
          bazel build --config=i386_windows --strip=always :caldev32

      - name: Build Linux 32bit
        if: matrix.os == 'Linux'
        run: |
          cd src
          bazel build --config=i386_linux --strip=always :caldev32

  test:
    needs: build
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ Linux, Windows, macOS ]
    steps:
      - name: Check gtest existence (windows)
        id: check_gtest_windows
        if: matrix.os == 'windows-latest'
        uses: andstor/file-existence-action@v1.0.1
        with:
          files: "src/extern/googletest/bazel-bin/gtest.lib"
      - name: Build gtest (windows)
        if: steps.check_gtest_windows.outputs.files_exists == 'false' && matrix.os == 'windows-latest'
        run: |
          echo Building gtest ...
          cd src/extern/googletest
          bazel build :gtest
          cd ../../..
          echo "Done !"
      - name: Check gtest existence (other)
        id: check_gtest_other
        if: matrix.os != 'windows-latest'
        uses: andstor/file-existence-action@v1.0.1
        with:
          files: "src/extern/googletest/bazel-bin/libgtest.so"
      - name: Build gtest (other)
        if: steps.check_gtest_other.outputs.files_exists == 'false' && matrix.os != 'windows-latest'
        run: |
          echo Building gtest ...
          cd src/extern/googletest
          bazel build :gtest
          cd ../../..
          echo "Done !"
      - name: Test product 64bit
        run: |
          cd src
          bazel build --strip=always :test_all
          ./bazel-bin/test_all
      - name: Test Windows 32bit
        if: matrix.os == 'Windows'
        run: |
          cd src
          bazel build --cpu=x64_x86_windows :test_all
          ./bazel-bin/test_all
          rebol -sqv tests\bindings\rebol2\tests.r
      - name: Test Linux 32bit
        if: matrix.os == 'Linux'
        run: |
          cd src
          bazel build --config=i386_linux --strip=always :test_all
          ./bazel-bin/test_all
          rebol -sqv tests/bindings/rebol2/tests.r
