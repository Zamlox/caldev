load("@rules_cc//cc:defs.bzl", "cc_binary", "cc_library", "cc_test")

config_setting(
    name = "x86_windows",
    values = { "cpu": "x64_x86_windows" }
)

# ImGui
SRCS_IMGUI = [
    "extern/imgui/examples/imgui_impl_opengl2.cpp",
    "extern/imgui/examples/imgui_impl_glfw.cpp",
    "extern/imgui/examples/imgui_impl_glfw.h",
    "extern/imgui/examples/imgui_impl_opengl2.h",
    "extern/imgui/misc/cpp/imgui_stdlib.h",
    "extern/imgui/misc/cpp/imgui_stdlib.cpp",
    "extern/imgui/imgui.h",
    "extern/imgui/imgui.cpp",
    "extern/imgui/imgui_draw.cpp",
    "extern/imgui/imconfig.h",
    "extern/imgui/imgui_internal.h",
    "extern/imgui/imgui_internal.cpp",
    "extern/imgui/imstb_textedit.h",
    "extern/imgui/imstb_rectpack.h",
    "extern/imgui/imstb_truetype.h",
    "extern/imgui/imgui_widgets.cpp",
]
COPTS_IMGUI = [
    "-Iextern/glfw/include",
    "-Iextern/imgui",
    "-Iextern/imgui/examples",
    "-Iextern/GSL/include",
]

SRCS_STB = [
    "extern/stb/stb_image.h",
    "extern/stb/stb_image_write.h",
]
COPTS_STB = [
    "-Iextern/stb",
    "-DSTB_IMAGE_IMPLEMENTATION",
]

# caldev
COPTS_WINDOWS = [
    "-DOS_WINDOWS",
    "-std:c++17",
]
SRCS_EXCLUDE_WINDOWS = glob([
    "internal/**/*.h",
    "internal/**/*.cpp",
], exclude=["internal/os/linux/**"])
SRCS = glob([
        "api/**",
        "modules/**/*.h",
        "modules/**/*.cpp",
        "bindings/**/*.h",
        "bindings/**/*.cpp",
    ]) + select({
        "@bazel_tools//src/conditions:windows": SRCS_EXCLUDE_WINDOWS,
        ":x86_windows": SRCS_EXCLUDE_WINDOWS,
        "//conditions:default": glob([
            "internal/**/*.h",
            "internal/**/*.cpp",
        ], exclude=["internal/os/windows/**"])
    }) + [
        "//extern/rebsdev:src/glue/glue.h",
        "extern/GSL/include/gsl/assert.h",
        "extern/GSL/include/gsl/pointers.h",
        "extern/GSL/include/gsl/string_span.h",
        "extern/GSL/include/gsl/span_ext.h",
        "extern/GSL/include/gsl/span.h",
        "extern/GSL/include/gsl/byte.h",
        "extern/GSL/include/gsl/util.h",
    ] + SRCS_IMGUI + SRCS_STB
COPTS = [
        "-I.",
        "-Iextern/glfw/include",
        "-Iextern/imgui",
        "-Iextern/imgui/examples",
        "-Iextern/GSL/include",
        "-Iextern/rebsdev/src/glue",
        "-DCALDEV_EXPORT",
    ] + select({
        "@bazel_tools//src/conditions:windows": COPTS_WINDOWS,
        ":x86_windows": COPTS_WINDOWS,
        "@bazel_tools//src/conditions:darwin": [
            "-DOS_MACOS",
            "-std=c++17",
        ],
        "//conditions:default": [
            "-DOS_LINUX",
            "-std=c++17",
        ]
    }) + COPTS_IMGUI + COPTS_STB
LIBS_WINDOWS = [
    "user32.lib", "gdi32.lib", "shell32.lib", "opengl32.lib",
]
LINKSHARED = True
DEPS = [":caldevlib"]
LINKOPTS = select({
        "@bazel_tools//src/conditions:windows": LIBS_WINDOWS,
        ":x86_windows": LIBS_WINDOWS,
        "@bazel_tools//src/conditions:darwin": [
            "-ldl", "-lpthread", "-framework Foundation -framework Cocoa -framework OpenGL -framework IOKit -framework CoreVideo"
        ],
        "//conditions:default": [
            "-ldl", "-lpthread", "-lGL"
        ]
    })

cc_library(
    name = "caldevlib",
    srcs = SRCS,
    copts = COPTS,
    deps = select({
        "@bazel_tools//src/conditions:darwin": [
            "//extern/glfw:glfw_",
        ],
        "//conditions:default": [
            "//extern/glfw:glfw",
        ],
    }) + [
        "//extern/rebsdev:reblib",
    ],
    visibility = ["//visibility:public"],
)

# build this for 64bit platform
cc_binary(
    name = "caldev",
    srcs = SRCS,
    copts = COPTS,
    linkshared = LINKSHARED,
    deps = DEPS,
    linkopts = LINKOPTS,
)

# build this for 32bit platform
cc_binary(
    name = "caldev32",
    srcs = SRCS,
    copts = COPTS,
    linkshared = LINKSHARED,
    deps = DEPS,
    linkopts = LINKOPTS,
)

# demo app
cc_binary(
    name = "demo_gui",
    srcs = ["examples/c++/demo_gui.cpp"] + SRCS,
    deps = [":caldevlib"],
    copts = COPTS,
    linkstatic = 1,
    linkopts = LINKOPTS + ["/SUBSYSTEM:WINDOWS"],
)

# tests
# all tests
cc_test(
    name = "test_all",
    srcs = SRCS + glob([
        "tests/**/*.cpp",
        "tests/**/*.h",
    ]),
    copts = [
        "-Iextern/googletest/googletest/include",
        "-I.",
    ] + COPTS,
    deps = [
        "//extern/googletest:gtest_main",
        ":caldevlib",
    ],
    linkopts = LINKOPTS,
)

cc_test(
    name = "test_rebsdev",
    srcs = SRCS + glob([
        "tests/external/rebsdev/**/*.cpp",
        "tests/external/rebsdev/**/*.h",
    ]),
    copts = [
        "-Iextern/googletest/googletest/include",
        "-I.",
    ] + COPTS,
    deps = [
        "//extern/googletest:gtest_main",
        ":caldevlib",
    ],
    linkopts = LINKOPTS,
)
